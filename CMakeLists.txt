cmake_minimum_required(VERSION 3.7)
project(Life)

set(CMAKE_CXX_STANDARD 14)

# include_directories(Life)
FILE(GLOB_RECURSE SOURCE_FILES Life/*.cpp)
add_executable(Life ${SOURCE_FILES} Life/glad/glad.c)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${Life_SOURCE_DIR}/cmake")

find_package(SDL2 REQUIRED)
if (SDL2_FOUND)
    include_directories(${SDL2_INCLUDE_DIR})
    target_link_libraries(Life ${SDL2_LIBRARY})
    message(STATUS "Success! Loaded SDL2")
    message(STATUS "SDL2 Headers Path: ${SDL2_INCLUDE_DIR}")
    message(STATUS "SDL2 Libraries Path: ${SDL2_LIBRARY}")
else()
    message(FATAL_ERROR "Error! Can't find SDL2")
endif()

find_package(GLM REQUIRED)
if (GLM_FOUND)
    include_directories(${GLM_INCLUDE_DIRS})
    message(STATUS "Success! Loaded GLM")
    message(STATUS "GLM Headers Path: ${GLM_INCLUDE_DIRS}")
else()
    message(FATAL_ERROR "Error! Can't find GLM")
endif()

find_package(SOIL REQUIRED)
if (SOIL_FOUND)
    include_directories(${SOIL_INCLUDE_DIR})
    target_link_libraries(Life ${SOIL_LIBRARY})
    message(STATUS "Success! Loaded SOIL")
    message(STATUS "SOIL Headers Path: ${SOIL_INCLUDE_DIR}")
    message(STATUS "SOIL Libraries Path: ${SOIL_LIBRARY}")
else()
    message(FATAL_ERROR "Error! Can't find SOIL")
endif()

if (MINGW)
    target_link_libraries(Life OpenGL32)
    message(STATUS "Linked against libOpenGL32")
else()
    target_link_libraries(Life GL)
    message(STATUS "Linked against libGL")
endif()

# Test
# add_executable(Test Life/main.cpp Life/glad/glad.c)
# target_link_libraries(Test ${SDL2_LIBRARY} ${SOIL_LIBRARY} OpenGL32)